type Owner {
  _id : String!
  name : String!
  email : String!
  phone : String!
}


type Project {
  _id : String!
  Owner : ID!
  name : String!
  description : String!
  status : Status!
}

enum Status {
    NOT_STARTED
    IN_PROGRESS
    COMPLETED
}

input FetchOwner {
  id : String!
}

input FetchProject {
  id : String!
}

input NewOwner {
   name : String!
   email : String!
   phone : String!
}

input NewProject {
  Owner : ID!
  name : String!
  description : String!
  status : Status!
}



type Query {
  owners : [Owner!]!
  projects : [Project!]!
  owner(input : FetchOwner) : Owner!
  project(input : FetchProject) : Project!
}


type Mutation {
  createProject(input : NewProject) : Project!
  createOwner(input : NewOwner) : Owner!
}